def analyze_letters_simple(filename):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    counts = {}
    for ch in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        counts[ch] = 0
    
    total_words = 0
    
    try:
        with open(filename, 'r', encoding='utf-8') as file:
            print(f"üìñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª: {filename}")
            print("-" * 40)
            
            for line in file:
                words = line.split()
                for word in words:
                    # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–æ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    clean_word = word.upper().rstrip('.,!?;:"()')
                    clean_word = ''.join(char for char in clean_word if char.isalpha())
                    
                    if clean_word:
                        total_words += 1
                        # –û—Ç–º–µ—á–∞–µ–º –≤—Å–µ –±—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —ç—Ç–æ–º —Å–ª–æ–≤–µ
                        for letter in set(clean_word):
                            if letter in counts:
                                counts[letter] += 1
    
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª '{filename}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞")
        print("2. –ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞")
        print("3. –î–ª—è —Ñ–∞–π–ª–∞ –≤ –¥—Ä—É–≥–æ–π –ø–∞–ø–∫–µ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å")
        return False
    except PermissionError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É '{filename}'")
        return False
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ–≤–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    if total_words == 0:
        print("‚ö†Ô∏è –í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        return False
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"üìä –í—Å–µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–ª–æ–≤: {total_words}")
    print()
    print("–ë—É–∫–≤–∞ : –°–ª–æ–≤   %")
    print("-" * 18)
    
    for letter in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        percentage = (counts[letter] / total_words * 100) if total_words > 0 else 0
        print(f"{letter}     : {counts[letter]:4d}  {percentage:6.2f}%")
    
    # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—É—é —Ä–µ–¥–∫—É—é –±—É–∫–≤—É
    min_count = min(counts.values())
    rarest = [letter for letter, count in counts.items() if count == min_count]
    
    print(f"\nüéØ –°–∞–º–∞—è —Ä–µ–¥–∫–∞—è –±—É–∫–≤–∞: {', '.join(rarest)} (–≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ {min_count} —Å–ª–æ–≤–∞—Ö)")
    return True

# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∞–π–ª–∞
def main():
    print("=" * 50)
    print("–ê–ù–ê–õ–ò–ó–ê–¢–û–† –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ë–£–ö–í –í –°–õ–û–í–ê–•")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:")
        print("1 - –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª Test.txt")
        print("2 - –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ –∏–º—è —Ñ–∞–π–ª–∞")
        print("3 - –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        
        choice = input("–í–∞—à –≤—ã–±–æ—Ä (1/2/3): ").strip()
        
        if choice == '1':
            # –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ Test.txt
            analyze_letters_simple('Test.txt')
        
        elif choice == '2':
            # –í–≤–æ–¥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            filename = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞: ").strip()
            if filename:
                analyze_letters_simple(filename)
            else:
                print("‚ùå –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        
        elif choice == '3':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        
        # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–±–æ—Ä–æ–º
        if choice in ['1', '2']:
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    main()